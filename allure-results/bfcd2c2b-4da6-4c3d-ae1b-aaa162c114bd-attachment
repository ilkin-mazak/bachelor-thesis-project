# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: E2E Checkout Flow >> Complete checkout as logged-in user
- Location: C:\Users\Ilkin Mazakoghlu\Desktop\final-project\tests\CheckoutFlow.spec.js:31:3

# Error details

```
Error: page.waitForURL: Test timeout of 10000ms exceeded.
=========================== logs ===========================
waiting for navigation until "load"
============================================================
    at ShopPage.viewCart (C:\Users\Ilkin Mazakoghlu\Desktop\final-project\page-objects\ShopPage.js:21:17)
    at C:\Users\Ilkin Mazakoghlu\Desktop\final-project\tests\CheckoutFlow.spec.js:45:20
```

# Page snapshot

```yaml
- link "Skip to content"
- banner:
  - paragraph:
    - link "mystore"
  - navigation:
    - list:
      - listitem:
        - link "Home"
      - listitem:
        - link "Shop"
      - listitem:
        - link "Cart"
      - listitem:
        - link "My account"
      - listitem:
        - link "Contact us"
  - button "0 items in cart, total price of 0,00 €":
    - img
- main:
  - navigation "Breadcrumb":
    - link "Home"
    - text: /
    - link "Clothing"
    - text: /
    - link "Men"
    - text: /
    - link "Tops"
    - text: /
    - link "Hoodies & Sweatshirts"
    - text: / Abominable Hoodie
  - alert:
    - text: “Abominable Hoodie” has been added to your cart.
    - link "View cart"
  - button "View full-screen image gallery"
  - link "mh09-green_main-1.jpg":
    - img "mh09-green_main-1.jpg"
  - link "Abominable Hoodie - Image 2":
    - img "Abominable Hoodie - Image 2"
  - link "Abominable Hoodie - Image 3":
    - img "Abominable Hoodie - Image 3"
  - list:
    - listitem:
      - img "Abominable Hoodie"
    - listitem:
      - img "Abominable Hoodie - Image 2"
    - listitem:
      - img "Abominable Hoodie - Image 3"
  - heading "Abominable Hoodie" [level=1]
  - text: 69,00 €
  - paragraph: This is a variable product called a Abominable Hoodie
  - text: Size
  - combobox "Size":
    - option "Choose an option"
    - option "XS"
    - option "S" [selected]
    - option "M"
    - option "L"
    - option "XL"
  - text: Color
  - combobox "Color":
    - option "Choose an option"
    - option "Blue"
    - option "Green" [selected]
    - option "Red"
  - link "Clear options": Clear
  - alert
  - paragraph: It took CoolTech™ weather apparel know-how and lots of wind-resistant fabric to get the Abominable Hoodie just right. It’s aggressively warm when it needs to be, while maintaining your comfort in milder climes.
  - paragraph: • Blue heather hoodie. • Relaxed fit. • Moisture-wicking. • Machine wash/dry.
  - paragraph: 80 in stock
  - text: Abominable Hoodie quantity
  - spinbutton "Product quantity": "1"
  - button "Add to cart"
  - text: "SKU: MH09-S-Green Category:"
  - link "Hoodies & Sweatshirts"
  - tablist:
    - listitem:
      - tab "Description" [selected]
    - listitem:
      - tab "Additional information"
    - listitem:
      - tab "Reviews (0)"
  - tabpanel "Description":
    - paragraph: It took CoolTech™ weather apparel know-how and lots of wind-resistant fabric to get the Abominable Hoodie just right. It’s aggressively warm when it needs to be, while maintaining your comfort in milder climes.
    - paragraph: • Blue heather hoodie. • Relaxed fit. • Moisture-wicking. • Machine wash/dry.
- contentinfo:
  - paragraph:
    - link "mystore"
  - paragraph:
    - text: Proudly powered by
    - link "WordPress"
- status
```

# Test source

```ts
   1 | import config from "../config/site-config.json" assert { type: "json" };
   2 |
   3 | export default class ShopPage {
   4 |   async navigateToProduct(productSlug) {
   5 |     await this.page.goto(`/product/${productSlug}`);
   6 |   }
   7 |   constructor(page) {
   8 |     this.page = page;
   9 |     this.selectors = config.selectors.product;
  10 |   }
  11 |
  12 |   async selectProductOptions(size, color) {
  13 |     await this.page.locator(this.selectors.sizeDropdown).selectOption(size);
  14 |     await this.page.locator(this.selectors.colorDropdown).selectOption(color);
  15 |   }
  16 |   async viewCart() {
  17 |     const viewCartButton = this.page.locator(this.selectors.viewCartButton);
  18 |
  19 |     // Browser-agnostic click with navigation wait
  20 |     await Promise.all([
> 21 |       this.page.waitForURL(/cart/, { timeout: 10000 }), // 30s timeout
     |                 ^ Error: page.waitForURL: Test timeout of 10000ms exceeded.
  22 |       viewCartButton.click(),
  23 |     ]);
  24 |
  25 |     // Additional verification for Firefox
  26 |     await this.page.waitForLoadState("networkidle");
  27 |     await this.page.waitForSelector(this.selectors.cart.cartTotal, {
  28 |       state: "visible",
  29 |       timeout: 5000,
  30 |     });
  31 |   }
  32 |
  33 |   async addToCart() {
  34 |     await this.page.locator(this.selectors.addToCartButton).click();
  35 |   }
  36 | }
  37 |
```