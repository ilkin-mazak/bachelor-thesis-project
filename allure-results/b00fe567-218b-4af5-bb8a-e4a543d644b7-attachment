# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: E2E Checkout Flow >> Complete checkout as logged-in user
- Location: C:\Users\Ilkin Mazakoghlu\Desktop\final-project\tests\CheckoutFlow.spec.js:28:3

# Error details

```
Error: locator.isVisible: Test timeout of 10000ms exceeded.
Call log:
    - checking visibility of getByRole('button', { name: 'Edit shipping address' })

    at CheckoutPage.safeClickEditAddress (C:\Users\Ilkin Mazakoghlu\Desktop\final-project\page-objects\CheckoutPage.js:15:26)
    at C:\Users\Ilkin Mazakoghlu\Desktop\final-project\tests\CheckoutFlow.spec.js:53:24
```

# Page snapshot

```yaml
- link "Skip to content"
- banner:
  - banner:
    - paragraph:
      - link "mystore"
- main:
  - form "Checkout":
    - group "Contact information":
      - text: Contact information
      - heading "Contact information" [level=2]
      - paragraph: We'll use this email to send you details and updates about your order.
      - textbox "Email address": email1@email.com
      - text: Email address
    - group "Shipping address":
      - text: Shipping address
      - heading "Shipping address" [level=2]
      - paragraph: Enter the address where you want your order delivered.
      - text: John Doe 123 Main St, Vilnius, wrth, 01234, Lithuania
      - button "Edit shipping address": Edit
      - checkbox "Use same address for billing" [checked]
      - text: Use same address for billing
    - group "Shipping options":
      - text: Shipping options
      - heading "Shipping options" [level=2]
      - radio "Free shipping Free" [checked]
      - text: Free shipping Free
    - group "Payment options":
      - text: Payment options
      - heading "Payment options" [level=2]
      - text: Cash on delivery Pay with cash upon delivery.
    - checkbox "Add a note to your order"
    - text: Add a note to your order By proceeding with your purchase you agree to our
    - link "Terms and Conditions"
    - text: and Privacy Policy
    - link "Return to Cart"
    - button "Place Order"
  - heading "Order summary"
  - text: 1 item
  - img "Abominable Hoodie"
  - heading "Abominable Hoodie" [level=3]
  - text: 69,00 €
  - paragraph: It took CoolTech™ weather apparel know-how and lots of wind-resistant fabric to get the Abominable…
  - list:
    - listitem: "Size: S"
    - listitem: "Color: Green"
  - text: "Total price for 1 Abominable Hoodie item: 69,00 €"
  - heading "Add a coupon" [level=2]:
    - button "Add a coupon"
  - text: Subtotal 69,00 € Delivery
  - strong: Free
  - text: Free shipping Total 69,00 €
- paragraph: Notifications
- text: 1 shipping option was found.
- status
```

# Test source

```ts
   1 | import config from "../config/site-config.json" assert { type: "json" };
   2 |
   3 | export default class CheckoutPage {
   4 |   constructor(page) {
   5 |     this.page = page;
   6 |     this.selectors = config.selectors.checkout;
   7 |   }
   8 |
   9 |   async safeClickEditAddress() {
  10 |     const editButton = this.page.getByRole(
  11 |       this.selectors.editShippingAddress.role,
  12 |       { name: this.selectors.editShippingAddress.name }
  13 |     );
  14 |
> 15 |     if (await editButton.isVisible()) {
     |                          ^ Error: locator.isVisible: Test timeout of 10000ms exceeded.
  16 |       await editButton.click();
  17 |       // Wait for the billing form to fully expand
  18 |       await this.page.waitForSelector("#shipping-first_name", {
  19 |         state: "visible",
  20 |         timeout: 3000,
  21 |       });
  22 |     }
  23 |   }
  24 |
  25 |   async ensureBillingFormVisible() {
  26 |     // Wait for form container animation/transition
  27 |     await this.page.waitForFunction(
  28 |       () => {
  29 |         const form = document.querySelector("#shipping-first_name");
  30 |         return form && form.offsetParent !== null; // Checks computed visibility
  31 |       },
  32 |       { timeout: 3000 }
  33 |     );
  34 |   }
  35 |
  36 |   async fillShippingDetails(details) {
  37 |     await this.ensureBillingFormVisible();
  38 |
  39 |     await this.page.locator(this.selectors.firstName).fill(details.firstName);
  40 |     await this.page.locator(this.selectors.lastName).fill(details.lastName);
  41 |     await this.page.locator(this.selectors.address).fill(details.address);
  42 |     await this.page.locator(this.selectors.city).fill(details.city);
  43 |     await this.page.locator(this.selectors.postcode).fill(details.postcode);
  44 |   }
  45 |
  46 |   async placeOrder() {
  47 |     await this.page.locator(this.selectors.placeOrderButton).click();
  48 |     //await this.page.waitForURL(/order-received/, { timeout: 5000 });
  49 |   }
  50 | }
  51 |
```