# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: E2E Checkout Flow >> Complete checkout as logged-in user
- Location: C:\Users\Ilkin Mazakoghlu\Desktop\final-project\tests\CheckoutFlow.spec.js:28:3

# Error details

```
Error: page.waitForURL: Test timeout of 20000ms exceeded.
=========================== logs ===========================
  "domcontentloaded" event fired
============================================================
    at ShopPage.viewCart (C:\Users\Ilkin Mazakoghlu\Desktop\final-project\page-objects\ShopPage.js:56:21)
    at C:\Users\Ilkin Mazakoghlu\Desktop\final-project\tests\CheckoutFlow.spec.js:42:5
```

# Page snapshot

```yaml
- link "Skip to content"
- banner:
  - paragraph:
    - link "mystore"
  - navigation:
    - list:
      - listitem:
        - link "Home"
      - listitem:
        - link "Shop"
      - listitem:
        - link "Cart"
      - listitem:
        - link "My account"
      - listitem:
        - link "Contact us"
- main:
  - heading "Cart" [level=1]
- contentinfo:
  - paragraph:
    - link "mystore"
  - paragraph:
    - text: Proudly powered by
    - link "WordPress"
```

# Test source

```ts
   1 | import config from "../config/site-config.json" assert { type: "json" };
   2 |
   3 | export default class ShopPage {
   4 |   constructor(page) {
   5 |     this.page = page;
   6 |     this.selectors = config.selectors.product; // Only product selectors
   7 |   }
   8 |
   9 |   // async navigateToProduct(productSlug) {
  10 |   //   await this.page.goto(`/product/${productSlug}`);
  11 |   //   await this.page.waitForSelector(this.selectors.sizeDropdown);
  12 |   // }
  13 |
  14 |   async navigateToProduct(productSlug) {
  15 |     // 1. Use full URL with base from config
  16 |     await this.page.goto(`${config.baseURL}/product/${productSlug}`);
  17 |
  18 |     // 2. Wait for ALL network requests to finish
  19 |     await this.page.waitForLoadState("networkidle", { timeout: 15000 });
  20 |
  21 |     // 3. Wait for size dropdown to exist in DOM (even if hidden)
  22 |     await this.page.waitForSelector(this.selectors.sizeDropdown, {
  23 |       state: "attached",
  24 |       timeout: 20000,
  25 |     });
  26 |
  27 |     // 4. Wait for JavaScript rendering complete
  28 |     await this.page.evaluate(async () => {
  29 |       await new Promise((resolve) => {
  30 |         if (document.readyState === "complete") resolve();
  31 |         document.addEventListener("readystatechange", () => {
  32 |           if (document.readyState === "complete") resolve();
  33 |         });
  34 |       });
  35 |     });
  36 |
  37 |     // 5. Final visibility check
  38 |     await this.page.waitForSelector(this.selectors.sizeDropdown, {
  39 |       state: "visible",
  40 |       timeout: 10000,
  41 |     });
  42 |   }
  43 |
  44 |   async selectProductOptions(size, color) {
  45 |     await this.page.locator(this.selectors.sizeDropdown).selectOption(size);
  46 |     await this.page.locator(this.selectors.colorDropdown).selectOption(color);
  47 |   }
  48 |
  49 |   async addToCart() {
  50 |     await this.page.locator(this.selectors.addToCartButton).click();
  51 |     await this.page.waitForSelector(this.selectors.viewCartButton);
  52 |   }
  53 |
  54 |   async viewCart() {
  55 |     await this.page.locator(this.selectors.viewCartButton).click();
> 56 |     await this.page.waitForURL(/cart/);
     |                     ^ Error: page.waitForURL: Test timeout of 20000ms exceeded.
  57 |   }
  58 | }
  59 |
```