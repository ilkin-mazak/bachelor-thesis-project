# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: E2E Checkout Flow >> Complete checkout as logged-in user
- Location: C:\Users\Ilkin Mazakoghlu\Desktop\final-project\tests\CheckoutFlow.spec.js:9:3

# Error details

```
Error: page.goto: Protocol error (Page.navigate): Cannot navigate to invalid URL
Call log:
  - navigating to "/product/abominable-hoodie", waiting until "load"

    at C:\Users\Ilkin Mazakoghlu\Desktop\final-project\tests\CheckoutFlow.spec.js:25:16
```

# Page snapshot

```yaml
- link "Skip to content"
- banner:
  - paragraph:
    - link "mystore"
  - navigation:
    - list:
      - listitem:
        - link "Home"
      - listitem:
        - link "Shop"
      - listitem:
        - link "Cart"
      - listitem:
        - link "My account"
      - listitem:
        - link "Contact us"
  - button "0 items in cart, total price of 0,00 â‚¬":
    - img
- main:
  - heading "My account" [level=1]
  - navigation "Account pages":
    - list:
      - listitem:
        - link "> Dashboard"
      - listitem:
        - link "Orders"
      - listitem:
        - link "Downloads"
      - listitem:
        - link "Addresses"
      - listitem:
        - link "Account details"
      - listitem:
        - link "Log out"
  - paragraph:
    - text: Hello
    - strong: user1
    - text: (not
    - strong: user1
    - text: "?"
    - link "Log out"
    - text: )
  - paragraph:
    - text: From your account dashboard you can view your
    - link "recent orders"
    - text: ", manage your"
    - link "shipping and billing addresses"
    - text: ", and"
    - link "edit your password and account details"
    - text: .
- contentinfo:
  - paragraph:
    - link "mystore"
  - paragraph:
    - text: Proudly powered by
    - link "WordPress"
- status
```

# Test source

```ts
   1 | import { test, expect } from "@playwright/test";
   2 | import LoginPage from "../page-objects/LoginPage.js";
   3 | import ShopPage from "../page-objects/ShopPage.js";
   4 | import CartPage from "../page-objects/CartPage.js";
   5 | import CheckoutPage from "../page-objects/CheckoutPage.js";
   6 | import config from "../config/site-config.json" assert { type: "json" };
   7 |
   8 | test.describe("E2E Checkout Flow", () => {
   9 |   test("Complete checkout as logged-in user", async ({ page }) => {
  10 |     // --- Test Steps ---
  11 |
  12 |     // 1. Login
  13 |     const loginPage = new LoginPage(page);
  14 |     await loginPage.navigateToLogin();
  15 |     await loginPage.login(
  16 |       config.users.valid.username,
  17 |       config.users.valid.password
  18 |     );
  19 |     await expect(page).toHaveURL(/my-account/); // Verify login success
  20 |
  21 |     page.pause();
  22 |
  23 |     // 2. Add Product to Cart
  24 |     const shopPage = new ShopPage(page);
> 25 |     await page.goto("/product/abominable-hoodie"); // Specific product page
     |                ^ Error: page.goto: Protocol error (Page.navigate): Cannot navigate to invalid URL
  26 |     await shopPage.selectProductOptions("green", "s"); // Choose color/size
  27 |     await shopPage.addToCart();
  28 |
  29 |     // Verify cart update
  30 |     await page.waitForSelector(config.selectors.cart.cartTotal);
  31 |     const cartTotal = await page
  32 |       .locator(config.selectors.cart.cartTotal)
  33 |       .textContent();
  34 |     expect(cartTotal).toContain("69,00");
  35 |
  36 |     // 3. Proceed to Checkout
  37 |     const cartPage = new CartPage(page);
  38 |     await cartPage.proceedToCheckout();
  39 |
  40 |     // 4. Complete Checkout
  41 |     const checkoutPage = new CheckoutPage(page);
  42 |     await checkoutPage.fillShippingDetails({
  43 |       firstName: "John",
  44 |       lastName: "Doe",
  45 |       address: "123 Main St",
  46 |       city: "Vilnius",
  47 |       postcode: "01234",
  48 |     });
  49 |     await checkoutPage.placeOrder();
  50 |
  51 |     // Final Assertion
  52 |     await expect(page).toHaveURL(/order-received/);
  53 |     await expect(page.locator(".order-success")).toBeVisible();
  54 |   });
  55 | });
  56 |
```